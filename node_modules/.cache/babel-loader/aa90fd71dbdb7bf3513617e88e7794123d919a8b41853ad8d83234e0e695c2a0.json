{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hajvery Computer\\\\OneDrive\\\\Desktop\\\\FOOD\\\\foodie\\\\src\\\\Components\\\\ContextReducer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import React, { createContext,useContext,useReducer } from 'react'\n\n// const CartStataContext = createContext();;\n// const  CartDispatchContext = createContext();\n// const reducer = (state,action) =>{\n//     switch (action.type) {\n//         case \"ADD\":\n//             return[...state,{id:action.id}]\n\n//         default:\n//             console.log(\"Error in Dispatch\");\n//     }\n\n// }\n\n// export const CartProvider = ({childern}) => {\n//     const[state,dispatch] = useReducer(reducer,[])\n//     return(\n// <CartDispatchContext.Provider value={dispatch}>\n//         <CartStataContext.Provider value={state}>\n//             {childern}\n//         </CartStataContext.Provider>\n\n// </CartDispatchContext.Provider>\n\n//     );\n\n// }\n// export const useCart = () => useContext(CartStataContext);\n// export const useDispatchCart = () => useContext(CartDispatchContext);\n\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartStateContext = /*#__PURE__*/createContext();\nconst CartDispatchContext = /*#__PURE__*/createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      console.log('ADD Done');\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        qty: action.qty,\n        size: action.size,\n        price: action.price,\n        img: action.img\n      }];\n    case \"REMOVE\":\n      let newArr = [...state];\n      newArr.splice(action.index, 1);\n      return newArr;\n\n    // case \"UPDATE\":\n    //     let arr = [...state]\n    //     arr.find((food, index) => {\n    //         if (food.id === action.id) {\n    //             console.log(food.qty, parseInt(action.qty), action.price + food.price)\n    //             arr[index] = { ...food, qty: parseInt(action.qty) + food.qty, price: action.price + food.price }\n    //         }\n\n    //     })\n    //     return arr\n\n    case 'UPDATE':\n      let arr = [...state];\n      // console.log(arr);\n      arr.find((food, index) => {\n        //console.log(a, action);\n        if (food.id === action.id) {\n          // console.log('updated', action, a);\n          arr[index] = {\n            ...food,\n            qty: parseInt(action.qty) + food.qty,\n            price: action.price + food.price\n          }; // a is the array jo abhi tk cart m prda tha and action contains the updated object's details\n        }\n      });\n\n      return arr;\n    default:\n      console.log('Error in Reducer');\n      return state;\n  }\n};\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(CartDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CartStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"8pXRrr8ws9JzhvliRQlKIDFcnHU=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartStateContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useDispatchCart = () => {\n  _s3();\n  return useContext(CartDispatchContext);\n};\n_s3(useDispatchCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","CartStateContext","CartDispatchContext","reducer","state","action","type","console","log","id","name","qty","size","price","img","newArr","splice","index","arr","find","food","parseInt","CartProvider","_ref","_s","children","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","useDispatchCart","_s3","$RefreshReg$"],"sources":["C:/Users/Hajvery Computer/OneDrive/Desktop/FOOD/foodie/src/Components/ContextReducer.js"],"sourcesContent":["// import React, { createContext,useContext,useReducer } from 'react'\r\n\r\n// const CartStataContext = createContext();;\r\n// const  CartDispatchContext = createContext();\r\n// const reducer = (state,action) =>{\r\n//     switch (action.type) {\r\n//         case \"ADD\":\r\n//             return[...state,{id:action.id}]\r\n\r\n\r\n//         default:\r\n//             console.log(\"Error in Dispatch\");\r\n//     }\r\n\r\n// }\r\n\r\n// export const CartProvider = ({childern}) => {\r\n//     const[state,dispatch] = useReducer(reducer,[])\r\n//     return(\r\n// <CartDispatchContext.Provider value={dispatch}>\r\n//         <CartStataContext.Provider value={state}>\r\n//             {childern}\r\n//         </CartStataContext.Provider>\r\n\r\n// </CartDispatchContext.Provider>\r\n\r\n//     );\r\n\r\n// }\r\n// export const useCart = () => useContext(CartStataContext);\r\n// export const useDispatchCart = () => useContext(CartDispatchContext);\r\n\r\nimport React, { createContext, useContext, useReducer } from 'react';\r\n\r\nconst CartStateContext = createContext();\r\nconst CartDispatchContext = createContext();\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD':\r\n            console.log('ADD Done');\r\n            return [...state, {\r\n                id: action.id,\r\n                name: action.name,\r\n                qty: action.qty,\r\n                size: action.size,\r\n                price: action.price,\r\n                img: action.img\r\n            }];\r\n\r\n        case \"REMOVE\":\r\n            let newArr = [...state]\r\n            newArr.splice(action.index, 1)\r\n            return newArr;\r\n\r\n        // case \"UPDATE\":\r\n        //     let arr = [...state]\r\n        //     arr.find((food, index) => {\r\n        //         if (food.id === action.id) {\r\n        //             console.log(food.qty, parseInt(action.qty), action.price + food.price)\r\n        //             arr[index] = { ...food, qty: parseInt(action.qty) + food.qty, price: action.price + food.price }\r\n        //         }\r\n\r\n        //     })\r\n        //     return arr\r\n\r\n        case 'UPDATE':\r\n            let arr = [...state]\r\n            // console.log(arr);\r\n            arr.find((food, index) => {\r\n                //console.log(a, action);\r\n                if (food.id === action.id) {\r\n                    // console.log('updated', action, a);\r\n                    arr[index] = { ...food, qty: (parseInt(action.qty) + food.qty), price: (action.price + food.price) } // a is the array jo abhi tk cart m prda tha and action contains the updated object's details\r\n                }\r\n\r\n            })\r\n            return arr\r\n\r\n        default:\r\n            console.log('Error in Reducer');\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, []);\r\n    return (\r\n        <CartDispatchContext.Provider value={dispatch}>\r\n            <CartStateContext.Provider value={state}>\r\n                {children}\r\n            </CartStateContext.Provider>\r\n        </CartDispatchContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useCart = () => useContext(CartStateContext);\r\nexport const useDispatchCart = () => useContext(CartDispatchContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}